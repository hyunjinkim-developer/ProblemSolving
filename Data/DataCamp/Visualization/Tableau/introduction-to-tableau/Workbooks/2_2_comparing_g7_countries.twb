<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='communication_infrastructure' inline='true' name='federated.0s8wjjk1ka76uq1gx8xn61o5u34y' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='communication_infrastructure' name='textscan.1o31tvb1r7rgkg10lidlm07rvkak'>
            <connection class='textscan' directory='/Users/hyunjinkim/Development/ProblemSolving/Data/DataCamp/Visualization/Tableau/introduction-to-tableau/Datasources/Chapter 2' filename='communication_infrastructure.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1o31tvb1r7rgkg10lidlm07rvkak' name='communication_infrastructure.csv' table='[communication_infrastructure#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Broadband Subscribers / 100 ppl' ordinal='2' />
            <column datatype='real' name='Cell Phones per 100 People' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1o31tvb1r7rgkg10lidlm07rvkak' name='communication_infrastructure.csv' table='[communication_infrastructure#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Broadband Subscribers / 100 ppl' ordinal='2' />
            <column datatype='real' name='Cell Phones per 100 People' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[communication_infrastructure.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[communication_infrastructure.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[communication_infrastructure.csv_8FF8130FDCB54140B41E896D072467A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[communication_infrastructure.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[communication_infrastructure.csv_8FF8130FDCB54140B41E896D072467A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Broadband Subscribers / 100 ppl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Broadband Subscribers / 100 ppl]</local-name>
            <parent-name>[communication_infrastructure.csv]</parent-name>
            <remote-alias>Broadband Subscribers / 100 ppl</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[communication_infrastructure.csv_8FF8130FDCB54140B41E896D072467A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cell Phones per 100 People</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cell Phones per 100 People]</local-name>
            <parent-name>[communication_infrastructure.csv]</parent-name>
            <remote-alias>Cell Phones per 100 People</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[communication_infrastructure.csv_8FF8130FDCB54140B41E896D072467A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='communication_infrastructure.csv' datatype='table' name='[__tableau_internal_object_id__].[communication_infrastructure.csv_8FF8130FDCB54140B41E896D072467A0]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='communication_infrastructure.csv' id='communication_infrastructure.csv_8FF8130FDCB54140B41E896D072467A0'>
            <properties context=''>
              <relation connection='textscan.1o31tvb1r7rgkg10lidlm07rvkak' name='communication_infrastructure.csv' table='[communication_infrastructure#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='Broadband Subscribers / 100 ppl' ordinal='2' />
                  <column datatype='real' name='Cell Phones per 100 People' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='communication_infrastructure' name='federated.0s8wjjk1ka76uq1gx8xn61o5u34y' />
          </datasources>
          <datasource-dependencies datasource='federated.0s8wjjk1ka76uq1gx8xn61o5u34y'>
            <column datatype='real' name='[Broadband Subscribers / 100 ppl]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Broadband Subscribers / 100 ppl]' derivation='Min' name='[min:Broadband Subscribers / 100 ppl:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Broadband Subscribers / 100 ppl]' derivation='Sum' name='[sum:Broadband Subscribers / 100 ppl:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0s8wjjk1ka76uq1gx8xn61o5u34y].[min:Broadband Subscribers / 100 ppl:qk]' included-values='in-range'>
            <min>30.0</min>
            <max>43.799999999999997</max>
          </filter>
          <filter class='categorical' column='[federated.0s8wjjk1ka76uq1gx8xn61o5u34y].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.0s8wjjk1ka76uq1gx8xn61o5u34y].[none:Country:nk]' direction='DESC' />
          <slices>
            <column>[federated.0s8wjjk1ka76uq1gx8xn61o5u34y].[none:Country:nk]</column>
            <column>[federated.0s8wjjk1ka76uq1gx8xn61o5u34y].[min:Broadband Subscribers / 100 ppl:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s8wjjk1ka76uq1gx8xn61o5u34y].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0s8wjjk1ka76uq1gx8xn61o5u34y].[sum:Broadband Subscribers / 100 ppl:qk]</rows>
        <cols>[federated.0s8wjjk1ka76uq1gx8xn61o5u34y].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{7375C944-2FBA-4F7D-9FDE-D6A676D6F1B0}' />
    </worksheet>
  </worksheets>
  <windows film-mode='true' source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0s8wjjk1ka76uq1gx8xn61o5u34y].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s8wjjk1ka76uq1gx8xn61o5u34y].[none:Country:nk]</field>
            <field>[federated.0s8wjjk1ka76uq1gx8xn61o5u34y].[none:Year:ok]</field>
            <field>[federated.0s8wjjk1ka76uq1gx8xn61o5u34y].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{734F48F8-5331-41E3-BCF2-FBB66AB328AA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 2' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
